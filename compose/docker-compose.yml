version: "3.7"

## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  sonouno-db-data:
  data1-1:
  data1-2:
  data2-1:
  data2-2:

networks:
  backend-network:
    driver: bridge


# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio
  command: server --console-address ":9001" http://minio{1...2}/data{1...2}
  expose:
    - "9000"
    - "9001"
  networks:
    - backend-network
  environment:
    - MINIO_ROOT_USER
    - MINIO_ROOT_PASSWORD
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

services:

  sonouno-server:
    image: ${SONOUNO_SERVER_IMAGE:-sonounoserver:latest}
    container_name: sonouno-server
    stdin_open: true  # docker run -i
    tty: true         # docker run -t
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=http://${DOMAIN?Variable not set}
      - SENTRY_DSN=https://nowhere.com
      - MAIL_CONSOLE
      - MAIL_USERNAME
      - MAIL_PASSWORD
      - MINIO_ENDPOINT
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - MONGO_INITDB_USERNAME
      - MONGO_INITDB_PASSWORD
      - MONGO_INITDB_DATABASE
      - PROJECT_NAME=sonoUno Server
      - SALT
      - SECRET_KEY
    expose:
      - 8001
    networks:
      - backend-network
    build:
      context: ../backend
      dockerfile: Dockerfile
    depends_on:
      - mongodb
      - minio1
      - minio2
    command: bash -c "/code/scripts/prepare-app.sh && uvicorn sonouno_server.main:app --root-path=${ROOTPATH:-/} --port 8001 --host 0.0.0.0 --reload"

  mongodb:
    image: ${MONGODB_IMAGE:-sonounoserver/mongodb:latest}
    container_name: mongodb
    restart: always
    hostname: mongodb
    volumes:
      - sonouno-db-data:/data/db/
#      - ../mongodb-logs/:/var/log/mongodb/
    environment:
      - MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD
      - MONGO_INITDB_DATABASE
      - MONGO_INITDB_USERNAME
      - MONGO_INITDB_PASSWORD
    ports:
      - "27017:27017"
    networks:
      - backend-network
    command: ["-f", "/etc/mongod.conf"]
    build:
      context: ../mongodb

  mongo-express:
    image: ${MONGOEXPRESS_IMAGE:-sonounoserver/mongoexpress:latest}
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - mongodb
    environment:
      - ME_CONFIG_BASICAUTH_USERNAME
      - ME_CONFIG_BASICAUTH_PASSWORD
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017
    networks:
      - backend-network
    build:
      context: ../mongo-express

  # starts 2 docker containers running minio server instances.
  # using nginx reverse proxy, load balancing, you can access
  # it through port 9000.
  minio1:
    <<: *minio-common
    container_name: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2

  minio2:
    <<: *minio-common
    container_name: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2

  nginx:
    image: ${NGINX_IMAGE:-sonounoserver/nginx:latest}
    container_name: nginx
    ports:
      - "80:80"
      - "9000:9000"
      - "9001:9001"
    networks:
      - backend-network
    build:
      context: ../nginx
    depends_on:
      - sonouno-server
      - minio1
      - minio2
